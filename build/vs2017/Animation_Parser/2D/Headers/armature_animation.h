//-------------------------------------------------------------------------------------------------------------------------------------------//
//------------------------------------------------------------Armature Animation-------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
#pragma once
#include "maths/vector2.h"
#include <string.h>
#include <vector>
#include "../rapidjson/include/rapidjson/document.h"
#include "../rapidjson/include/rapidjson/istreamwrapper.h"
#include <map>

//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
struct TranslationKey
{
	float time_to_next_key;													//The time between current key and the new key in the animation -//
	float start_time;														//start time of the animation -----------------------------------//		
	gef::Vector2 translation;												//Translation of the current translation keys -------------------//
};
//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//

//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
struct RotationKey
{
	float time_to_next_key;													//The time between current key and the new key in the animation -//
	float start_time;														//start time of the animation -----------------------------------//
	float rotation;															//Rotation of the current rotation key --------------------------//
};
//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//

//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
struct BoneKey
{
	std::string name;														//The name of the bone key --------------------------------------//
	std::vector<TranslationKey*> translation_keys;							//All translation keys ------------------------------------------//
	std::vector<RotationKey*> rotation_keys;								//All rotation keys ---------------------------------------------//
};
//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//

//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
struct AnimationKey
{
	float duration;															//Duration of the animation -------------------------------------//
	std::vector<BoneKey*> bone_keys;										//Bone keys for the animation -----------------------------------//
};
//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//

//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//
class ArmitureAnimation
{
public:
	ArmitureAnimation::ArmitureAnimation();
	inline ArmitureAnimation::~ArmitureAnimation() {}

	//Functions for reading animation details from the json files
	TranslationKey* ReadTranslationKeyDataFromJSON(const rapidjson::Value& array_pos);
	RotationKey* ReadRotationKeyDataFromJSON(const rapidjson::Value& array_pos);

	//Blend between positions
	gef::Vector2 lerp(gef::Vector2 start_pos, gef::Vector2 end_pos, float time);

	//Blend between angles
	float lerp(float start_angle, float end_angle, float time);
};
//-------------------------------------------------------------------------------------------------------------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------------------------//